{"version":3,"sources":["RED.js","Bibtex.js","Zenodo.js","Project.js","Searchbar.js","App.js","index.js"],"names":["RED","red","this","props","react_default","a","createElement","className","_red$cli","cli","inputs","outputs","baseCommand","doc","li","value","key","type","Fragment","style","clear","_","map","padding","fontSize","Component","defaultProps","Bibtex","bibtex","es","undefined","Zenodo","state","records","load","project","_this","searchTerm","encodeURIComponent","replace","url","concat","axios","get","then","response","data","filter","record","some","id","includes","setState","catch","length","link","href","links","doi","d","created","Date","toLocaleDateString","first","TOKEN","process","REACT_APP_PORT","FILES","red.yml","references.bib","filesystem.json","Project","files","loadFiles","loadFile","each","file","name","size","loadRedFile","promise","content","atob","json","yaml","safeLoad","loadBibFile","loadVmFile","filename","arguments","full_name","headers","Accept","Authorization","_this$state","html_url","description","float","homepage","license","spdx_id","Zenodo_Zenodo","RED_RED","Bibtex_Bibtex","Searchbar","onChange","ev","preventDefault","input","_this2","onSubmit","ref","e","placeholder","searchTopic","App","count","projects","onSearchChange","_ref","total_count","items","error","status","console","Searchbar_Searchbar","Project_Project","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9f70b22.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class RED extends Component {\n\n  static propTypes = {\n    red: PropTypes.object,\n  };\n\n  static defaultProps = {\n    red: null,\n  };\n\n  render() {\n      const { red } = this.props;\n\n      if (red === null) {\n        return <p className=\"alert\">No RED file found.</p>;\n      }\n\n      const { inputs, outputs, baseCommand, doc } = red.cli;\n\n      const li = (value, key) => (\n        <li key={key}>\n          <strong>{key}</strong>\n          {' '}\n          <span className=\"tag tag-info\">{value.type}</span>\n          {' '}\n          <small>{value.doc}</small>\n        </li>\n      );\n\n      return (\n        <React.Fragment>\n          <h3> Command <code>{baseCommand}</code> <small>{doc}</small></h3>\n          <div className=\"grid grid-middle\" style={{ clear: 'both' }}>\n            <div className=\"cell\">\n              <ul className=\"list-group list-striped\">\n                {_.map(inputs, li)}\n              </ul>\n            </div>\n            <span style={{ padding: '1rem 0 0 1rem', fontSize: '4rem' }}>â†’</span>\n            <div className=\"cell\">\n              <ul className=\"list-group list-striped\">\n                {_.map(outputs, li)}\n              </ul>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Bibliography from 'react-bibliography';\n\nexport default class Bibtex extends Component {\n\n  static propTypes = {\n    bibtex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    bibtex: undefined,\n  };\n\n  render() {\n    const { bibtex } = this.props;\n\n    if (bibtex === null) {\n      return null; // <p className=\"alert\">No Bibtext file found.</p>;\n    }\n\n    return (\n      <React.Fragment>\n        <h3>References</h3>\n        <Bibliography bibtex={bibtex} />\n      </React.Fragment>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport axios from 'axios';\n\nexport default class Zenodo extends Component {\n\n  static propTypes = {\n    project: PropTypes.string.isRequired,\n  }\n\n  state = {\n    records: null,\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  load = () => {\n    const { project } = this.props;\n    const searchTerm = encodeURIComponent(project.replace(/\\//g, ' '));\n    const url = `https://zenodo.org/api/records/?q=${searchTerm}`;\n\n    return axios.get(url)\n      .then((response) => {\n          const records = response.data\n            .filter((record) => {\n              const ids = _.get(record, 'metadata.related_identifiers', []);\n              return ids.some(id => _.get(id, 'identifier', '').includes(project));\n            });\n          this.setState({ records });\n        })\n      .catch((/* error */) => {});\n  }\n\n  render() {\n    const { records } = this.state;\n\n    if (records === null || !records.length) {\n      return null; // <p className=\"alert\">No DOIs found.</p>;\n    }\n\n    const date = d => new Date(d).toLocaleDateString();\n    const link = record => <span><a href={record.links.doi}>{record.doi}</a> <small>created at {date(record.created)}</small></span>;\n\n    if (records.length === 1) {\n      return <h3>DOI: {link(_.first(records))}</h3>;\n    }\n\n    return (\n      <React.Fragment>\n        <h3>DOIs</h3>\n        <ul>\n          {records.map(record =>\n            <li>{link(record)}</li>\n          )}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport RED from './RED';\nimport Bibtex from './Bibtex';\nimport Zenodo from './Zenodo';\n\nconst TOKEN = process.env.REACT_APP_PORT;\n\nconst FILES = {\n  'red.yml': 'loadRedFile',\n  'references.bib': 'loadBibFile',\n  'filesystem.json': 'loadVmFile',\n};\n\nexport default class Project extends Component {\n\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n  }\n\n  state = {\n    red: null,\n    bibtex: null,\n    files: null,\n  }\n\n  componentDidMount() {\n    this.loadFiles();\n  }\n\n  loadFiles = () => {\n    this.loadFile()\n      .then((response) => {\n        _.each(response.data, (file) => {\n          if (FILES[file.name] && file.size > 0) {\n            this[FILES[file.name]](this.loadFile(file.name));\n          }\n        });\n        this.setState({ files: response.data });\n      });\n  }\n\n  loadRedFile = (promise) => {\n    promise.then((response) => {\n      const content = atob(response.data.content);\n      const json = yaml.safeLoad(content);\n      this.setState({ red: json });\n    });\n  }\n\n  loadBibFile = (promise) => {\n    promise.then((response) => {\n      const bibtex = atob(response.data.content);\n      this.setState({ bibtex });\n    });\n  }\n\n  loadVmFile = (promise) => {\n    promise.then((response) => {\n      // debugger;\n      // this.setState({ vm: json });\n    });\n  }\n\n  loadFile = (filename = '') => {\n    const url = `https://api.github.com/repos/${this.props.data.full_name}/contents/${filename}`;\n    const headers = {\n      Accept: 'application/vnd.github.mercy-preview+json',\n      Authorization: TOKEN && `token ${TOKEN}`,\n    };\n\n    return axios.get(url, { headers })\n      .catch((/* error */) => {});\n  }\n\n  render() {\n    const { data } = this.props;\n    const { red, bibtex } = this.state;\n\n    return (\n      <article key={data.id} className=\"dashed-top p-t-1 p-b-2\">\n        <h2>\n          <a href={data.html_url}>{data.full_name}</a> <small>{data.description}</small>\n        </h2>\n\n        {data.doc &&\n          <blockquote>{data.doc}</blockquote>\n        }\n\n        <div style={{ float: 'right' }}>\n          {data.homepage &&\n            <span>Homepage: <a href={data.homepage}>{data.homepage}</a></span>\n          }\n          {data.license && data.license.spdx_id &&\n            <span>License: <a href={data.license.url}>{data.license.spdx_id}</a></span>\n          }\n        </div>\n\n        <Zenodo project={data.full_name} />\n\n        <RED red={red} />\n\n        <Bibtex bibtex={bibtex} />\n      </article>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  }\n\n  onChange = (ev) => {\n    ev.preventDefault();\n    this.props.onChange(this.input.value);\n  }\n\n  render() {\n    return (\n      <form className=\"cell\" onSubmit={this.onChange}>\n        <input\n          ref={e => this.input = e}\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"full-width\"\n        />\n      </form>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Project from './Project';\nimport Searchbar from './Searchbar';\n\nconst searchTopic = 'tawian';\n\nexport default class App extends Component {\n\n  state = {\n    count: 0,\n    projects: null,\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  onSearchChange = (searchTerm) => {\n    this.load(searchTerm);\n  }\n\n  load = (searchTerm = '') => {\n    const url = `https://api.github.com/search/repositories?q=${searchTerm} topic:${searchTopic}`;\n    const headers = {\n      Accept: 'application/vnd.github.mercy-preview+json',\n    };\n\n    axios.get(url, { headers })\n      .then(({ data }) => {\n        this.setState({\n          count: data.total_count,\n          projects: data.items,\n        });\n      })\n      .catch((error) => {\n        if (error.response.status === 404) return;\n        console.error(error);\n      });\n  }\n\n  render() {\n    const { count, projects } = this.state;\n\n    if (!projects) {\n      return <h1 className=\"loading\">Loading Projects</h1>;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"grid-inline p-b-1\">\n          <p>Showing {count} of {projects.length} projects.</p>\n          <Searchbar onChange={this.onSearchChange} />\n        </div>\n\n        {projects.length\n          ? projects.map(project => <Project key={project.id} data={project} />)\n          : <p className=\"alert\">No projects found.</p>\n        }\n      </React.Fragment>\n    );\n  }\n\n}\n","import 'tawian-frontend';\nimport 'typeface-cousine';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}